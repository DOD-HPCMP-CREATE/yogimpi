#!/bin/bash

# Error if empty variable.
# Argument 1 - variable to check
# Argument 2 - description of variable for error message
function errorIfEmpty {
    if [[ ${1} == "" ]]; then
        echo "Error: ${2} unspecified." >&2
        exit 1
    fi
}

function showUsage {
    echo "./configure -i <install prefix>"
    echo "Required environment variables to build YogiMPI: "
    echo "YCC - Serial C compiler to use"
    echo "YCXX - Serial C++ compiler to use"
    echo "YF90 - Serial Fortran compiler to use"
    echo "YMPICC - Parallel C compiler wrapper"
    echo
    echo "Optional environment variables for extended Python support:"
    echo "(End users of CREATE AV products do not need to do this.)"
    echo "YMPI_ENABLE_PYTHON - If set to 1, enable Python extension compile."
    echo "PYTHONHOME must be set."
    exit 0
}

osType=`uname`

if [[ $osType == "Darwin" ]]; then
    echo "Configuring for Mac OS X."
    libraryPathVar="DYLD_LIBRARY_PATH"
    libraryExtension="dylib"
elif [[ $osType == "Linux" ]]; then
    echo "Configuring for Linux."
    libraryPathVar="LD_LIBRARY_PATH"
    libraryExtension="so"
else
    echo "Unknown operating system, verify Make.flags manually."
fi

cCompiler=$YCC
cxxCompiler=$YCXX
fortranCompiler=$YF90
mpiC=$YMPICC

errorIfEmpty "$cCompiler" "C compiler"
errorIfEmpty "$cxxCompiler" "C++ compiler"
errorIfEmpty "$fortranCompiler" "Fortran compiler"
errorIfEmpty "$mpiC" "Parallel C compiler"

if [[ -z $PYTHONHOME || -z $YMPI_ENABLE_PYTHON ]]; then
    enablePython="no"
else
    echo "Enabling Python extension build."
    enablePython="yes"
    pythonLDFlags="-L$PYTHONHOME/lib -lpython2.7"
    pythonInclude="-I$PYTHONHOME/include/python2.7"

fi

installDir=""

while getopts ":i:c:h" opt; do
  case $opt in
    i)
      echo "Installation directory set to: $OPTARG"
      installDir=$OPTARG
      ;;
    h)
      showUsage
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [[ ${cCompiler} == "" ]]; then
    echo "Error: C compiler unspecified." >&2
    exit 1
fi

if [[ ${installDir} == "" ]]; then
    echo "Error: install directory unspecified." >&2
    exit 1
fi

sed -e "s|@INSTALLDIR@|${installDir}|g" \
    -e "s|@MPICC@|${mpiC}|g" \
    -e "s|@ENABLEPYTHON@|${enablePython}|g" \
    -e "s|@SERIALC@|${cCompiler}|g" \
    -e "s|@PYTHONINCLUDE@|${pythonInclude}|g" \
    -e "s|@PYTHONLDFLAGS@|${pythonLDFlags}|g" \
    -e "s|@LIBEXTENSION@|${libraryExtension}|g" \
    Make.flags.in > Make.flags

sed -e "s|@INSTALLDIR@|${installDir}|g" \
    -e "s|@SERIALCCOMPILER@|${cCompiler}|g" \
    wrapper/mpicc.in > wrapper/mpicc

sed -e "s|@INSTALLDIR@|${installDir}|g" \
    -e "s|@SERIALCXXCOMPILER@|${cxxCompiler}|g" \
    wrapper/mpicxx.in > wrapper/mpicxx

sed -e "s|@INSTALLDIR@|${installDir}|g" \
    -e "s|@SERIALF90COMPILER@|${fortranCompiler}|g" \
    wrapper/mpif90.in > wrapper/mpif90

sed -e "s|@INSTALLDIR@|${installDir}|g" \
    -e "s|@SERIALF90COMPILER@|${fortranCompiler}|g" \
    wrapper/mpif77.in > wrapper/mpif77

echo "Type make to build YogiMPI."
